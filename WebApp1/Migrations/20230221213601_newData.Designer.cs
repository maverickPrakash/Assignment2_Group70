// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp1.Models;

#nullable disable

namespace WebApp1.Migrations
{
    [DbContext(typeof(BidSiteContext))]
    [Migration("20230221213601_newData")]
    partial class newData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApp1.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Home"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Electronic"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Fashion"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Game"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Computer"
                        });
                });

            modelBuilder.Entity("WebApp1.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Asset_condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryBidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartBidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Username1");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Asset_condition = "new",
                            CategoryId = 1,
                            Cost = "12.0",
                            Description = "Prakash has created product stuff",
                            ExpiryBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6595),
                            Image = "sunflower.jgp",
                            Name = "Sunflower",
                            StartBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6554),
                            Username = "seller"
                        },
                        new
                        {
                            Id = 2,
                            Asset_condition = "old",
                            CategoryId = 2,
                            Cost = "12.0",
                            Description = "Prakash has created product stuff",
                            ExpiryBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6633),
                            Image = "Kitkat.jpg",
                            Name = "Kitkat",
                            StartBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6631),
                            Username = "seller"
                        },
                        new
                        {
                            Id = 3,
                            Asset_condition = "new",
                            CategoryId = 1,
                            Cost = "12.0",
                            Description = "Fresh Tulip",
                            ExpiryBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6637),
                            Image = "tulips.jpg",
                            Name = "Tulip",
                            StartBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6636),
                            Username = "seller"
                        },
                        new
                        {
                            Id = 4,
                            Asset_condition = "old",
                            CategoryId = 2,
                            Cost = "12.0",
                            Description = "Sweet in taste",
                            ExpiryBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6639),
                            Image = "Toblerone.jpg",
                            Name = "Tobelerone",
                            StartBidDate = new DateTime(2023, 2, 21, 16, 36, 1, 119, DateTimeKind.Local).AddTicks(6638),
                            Username = "buyer"
                        });
                });

            modelBuilder.Entity("WebApp1.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "buyer",
                            Email = "buer@gmail.com",
                            Password = "buyer",
                            UserType = "buyer"
                        },
                        new
                        {
                            Username = "seller",
                            Email = "seller@gmail.com",
                            Password = "seller",
                            UserType = "seller"
                        });
                });

            modelBuilder.Entity("WebApp1.Models.Product", b =>
                {
                    b.HasOne("WebApp1.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username1");

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
